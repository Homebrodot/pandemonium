<?xml version="1.0" encoding="UTF-8" ?>
<class name="AnimationTreePlayer" inherits="Node" version="3.5">
	<brief_description>
		[i]Deprecated.[/i] Animation player that uses a node graph for blending animations. Superseded by [AnimationTree].
	</brief_description>
	<description>
		[i]Deprecated.[/i] A node graph tool for blending multiple animations bound to an [AnimationPlayer]. Especially useful for animating characters or other skeleton-based rigs. It can combine several animations to form a desired pose.
		It takes [Animation]s from an [AnimationPlayer] node and mixes them depending on the graph.
		See [AnimationTree] for a more full-featured replacement of this node.
	</description>
	<tutorials>
		<link>$DOCS_URL/tutorials/animation/animation_tree.html</link>
	</tutorials>
	<methods>
		<method name="add_node">
			<return type="void" />
			<argument index="0" name="type" type="int" enum="AnimationTreePlayer.NodeType" />
			<argument index="1" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="advance">
			<return type="void" />
			<argument index="0" name="delta" type="float" />
			<description>
				Shifts position in the animation timeline. [code]delta[/code] is the time in seconds to shift. Events between the current frame and [code]delta[/code] are handled.
			</description>
		</method>
		<method name="animation_node_get_animation" qualifiers="const">
			<return type="Animation" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="animation_node_get_master_animation" qualifiers="const">
			<return type="String" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="animation_node_get_position" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="animation_node_set_animation">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="animation" type="Animation" />
			<description>
			</description>
		</method>
		<method name="animation_node_set_filter_path">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="path" type="NodePath" />
			<argument index="2" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="animation_node_set_master_animation">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="source" type="String" />
			<description>
			</description>
		</method>
		<method name="are_nodes_connected" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="dst_id" type="StringName" />
			<argument index="2" name="dst_input_idx" type="int" />
			<description>
			</description>
		</method>
		<method name="blend2_node_get_amount" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="blend2_node_set_amount">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="blend" type="float" />
			<description>
			</description>
		</method>
		<method name="blend2_node_set_filter_path">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="path" type="NodePath" />
			<argument index="2" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="blend3_node_get_amount" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="blend3_node_set_amount">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="blend" type="float" />
			<description>
			</description>
		</method>
		<method name="blend4_node_get_amount" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="blend4_node_set_amount">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="blend" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="connect_nodes">
			<return type="int" enum="Error" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="dst_id" type="StringName" />
			<argument index="2" name="dst_input_idx" type="int" />
			<description>
			</description>
		</method>
		<method name="disconnect_nodes">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="dst_input_idx" type="int" />
			<description>
			</description>
		</method>
		<method name="get_node_list">
			<return type="PoolStringArray" />
			<description>
				Returns a [PoolStringArray] containing the name of all nodes.
			</description>
		</method>
		<method name="mix_node_get_amount" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="mix_node_set_amount">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="ratio" type="float" />
			<description>
			</description>
		</method>
		<method name="node_exists" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="node" type="StringName" />
			<description>
			</description>
		</method>
		<method name="node_get_input_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="node_get_input_source" qualifiers="const">
			<return type="StringName" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="idx" type="int" />
			<description>
			</description>
		</method>
		<method name="node_get_position" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="node_get_type" qualifiers="const">
			<return type="int" enum="AnimationTreePlayer.NodeType" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="node_rename">
			<return type="int" enum="Error" />
			<argument index="0" name="node" type="StringName" />
			<argument index="1" name="new_name" type="StringName" />
			<description>
			</description>
		</method>
		<method name="node_set_position">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="screen_position" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_get_autorestart_delay" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_get_autorestart_random_delay" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_get_fadein_time" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_get_fadeout_time" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_has_autorestart" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_is_active" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_set_autorestart">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_set_autorestart_delay">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="delay_sec" type="float" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_set_autorestart_random_delay">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="rand_sec" type="float" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_set_fadein_time">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="time_sec" type="float" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_set_fadeout_time">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="time_sec" type="float" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_set_filter_path">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="path" type="NodePath" />
			<argument index="2" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_start">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="oneshot_node_stop">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="recompute_caches">
			<return type="void" />
			<description>
				Manually recalculates the cache of track information generated from animation nodes. Needed when external sources modify the animation nodes' state.
			</description>
		</method>
		<method name="remove_node">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="reset">
			<return type="void" />
			<description>
				Resets this [AnimationTreePlayer].
			</description>
		</method>
		<method name="timescale_node_get_scale" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="timescale_node_set_scale">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="scale" type="float" />
			<description>
			</description>
		</method>
		<method name="timeseek_node_seek">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="seconds" type="float" />
			<description>
			</description>
		</method>
		<method name="transition_node_delete_input">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="input_idx" type="int" />
			<description>
			</description>
		</method>
		<method name="transition_node_get_current" qualifiers="const">
			<return type="int" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="transition_node_get_input_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="transition_node_get_xfade_time" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="StringName" />
			<description>
			</description>
		</method>
		<method name="transition_node_has_input_auto_advance" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="input_idx" type="int" />
			<description>
			</description>
		</method>
		<method name="transition_node_set_current">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="input_idx" type="int" />
			<description>
			</description>
		</method>
		<method name="transition_node_set_input_auto_advance">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="input_idx" type="int" />
			<argument index="2" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="transition_node_set_input_count">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="count" type="int" />
			<description>
			</description>
		</method>
		<method name="transition_node_set_xfade_time">
			<return type="void" />
			<argument index="0" name="id" type="StringName" />
			<argument index="1" name="time_sec" type="float" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="active" type="bool" setter="set_active" getter="is_active" default="false">
			If [code]true[/code], the [AnimationTreePlayer] is able to play animations.
		</member>
		<member name="base_path" type="NodePath" setter="set_base_path" getter="get_base_path" default="NodePath(&quot;..&quot;)">
			The node from which to relatively access other nodes.
			It accesses the bones, so it should point to the same node the [AnimationPlayer] would point its Root Node at.
		</member>
		<member name="master_player" type="NodePath" setter="set_master_player" getter="get_master_player" default="NodePath(&quot;&quot;)">
			The path to the [AnimationPlayer] from which this [AnimationTreePlayer] binds animations to animation nodes.
			Once set, [Animation] nodes can be added to the [AnimationTreePlayer].
		</member>
		<member name="playback_process_mode" type="int" setter="set_animation_process_mode" getter="get_animation_process_mode" enum="AnimationTreePlayer.AnimationProcessMode" default="1">
			The thread in which to update animations.
		</member>
	</members>
	<constants>
		<constant name="NODE_OUTPUT" value="0" enum="NodeType">
			Output node.
		</constant>
		<constant name="NODE_ANIMATION" value="1" enum="NodeType">
			Animation node.
		</constant>
		<constant name="NODE_ONESHOT" value="2" enum="NodeType">
			OneShot node.
		</constant>
		<constant name="NODE_MIX" value="3" enum="NodeType">
			Mix node.
		</constant>
		<constant name="NODE_BLEND2" value="4" enum="NodeType">
			Blend2 node.
		</constant>
		<constant name="NODE_BLEND3" value="5" enum="NodeType">
			Blend3 node.
		</constant>
		<constant name="NODE_BLEND4" value="6" enum="NodeType">
			Blend4 node.
		</constant>
		<constant name="NODE_TIMESCALE" value="7" enum="NodeType">
			TimeScale node.
		</constant>
		<constant name="NODE_TIMESEEK" value="8" enum="NodeType">
			TimeSeek node.
		</constant>
		<constant name="NODE_TRANSITION" value="9" enum="NodeType">
			Transition node.
		</constant>
		<constant name="ANIMATION_PROCESS_PHYSICS" value="0" enum="AnimationProcessMode">
			Process animation during the physics process. This is especially useful when animating physics bodies.
		</constant>
		<constant name="ANIMATION_PROCESS_IDLE" value="1" enum="AnimationProcessMode">
			Process animation during the idle process.
		</constant>
	</constants>
</class>
